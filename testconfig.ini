[custom]
;不要随意改变关键字，否则会导致出错
;测试使用，勿上头

enable_rule_generator=true
overwrite_original_rules=true

;设置规则标志位
ruleset=🎯 向日葵,https://raw.githubusercontent.com/disyaoqing66/Clash/master/Ruleset/SunFlower.list
ruleset=🎯 ToDesk,https://raw.githubusercontent.com/disyaoqing66/Clash/master/Ruleset/ToDesk.list
ruleset=🎯 其余规则,[]FINAL
;设置规则标志位

;设置分组标志位
custom_proxy_group=🚀 手动切换`select`^((?!(UnblockMusic|music|𝐌𝐮𝐬𝐢𝐜|Unbolck|网易云|云音乐|Music|Netease|🎶|解锁)).)*$`[]🔯 故障转移-速鹰666`[]🔯 故障转移-Fastlink`[]🔯 故障转移-其他`[]🇭🇰 香港节点`[]🇨🇳 台湾节点`[]🇯🇵 日本节点`[]🇸🇬 狮城节点`[]🇺🇲 美国节点`[]🇰🇷 韩国节点
#custom_proxy_group=组名`类型`策略组1`策略组2`策略组3`
custom_proxy_group=🎯 其余规则`select`[]🚀 手动切换`[]DIRECT`[]🔯 故障转移-速鹰666`[]🔯 故障转移-Fastlink`[]🔯 故障转移-其他`[]🇭🇰 香港节点`[]🇨🇳 台湾节点`[]🇸🇬 狮城节点`[]🇯🇵 日本节点`[]🇺🇲 美国节点`[]🇰🇷 韩国节点
custom_proxy_group=🔯 故障转移-速鹰666`fallback`(?=.*V1)(?=.*(?:2\.0|2\.5)).*`http://www.gstatic.com/generate_204`300
custom_proxy_group=🔯 故障转移-Fastlink`url-test`广(港|台)`http://www.gstatic.com/generate_204`1800,5,100
#上述的正则表达式 包含广港或者广台
#20240814备份custom_proxy_group=🔯 故障转移-Fastlink`url-test`(?:台湾|韩国).*高速|高速.*(?:台湾|韩国)`http://www.gstatic.com/generate_204`300,5,50
#上述的正则表达式 包含高速且包含台湾或者韩国
#每隔1800秒测试一次，测速超时为5s，切换节点的延迟容差为100ms
custom_proxy_group=🔯 故障转移-其他`fallback`^`http://www.gstatic.com/generate_204`300
#https://geo.iproyal.com`600
#(?=.*V1)(?=.*(?:2\.0|2\.5)).* 包含V1且含2.0或2.5
#(^(?!.*(V2|V3|V4|0.6|1.0|1.5)).*) 不包含V2/V3/V4/0.6/1.0/1.5 
#`600,5,50意思是`interval（间隔时间过后，基准测试结果将被丢弃。如果使用该策略组，将会进行重新测试）,timeout（如果超时未完成，则放弃策略）,tolerance（仅当新获胜者的分数高于旧获胜者的分数加上容差时，才会更改策略。此选项可防止具有相似分数的策略不断交替）
custom_proxy_group=🎯 向日葵`select`[]DIRECT`[]🚀 手动切换
custom_proxy_group=🎯 ToDesk`select`[]DIRECT`[]🚀 手动切换
custom_proxy_group=🇭🇰 香港节点`url-test`(港|HK|Hong Kong)`http://www.gstatic.com/generate_204`300,,50
#custom_proxy_group=组名`类型`(正则)`测速url(如果需要的话)`测速周期(如果需要的话)
custom_proxy_group=🇯🇵 日本节点`url-test`(日本|川日|东京|大阪|泉日|埼玉|沪日|深日|[^-]日|JP|Japan)`http://www.gstatic.com/generate_204`300,,50
custom_proxy_group=🇺🇲 美国节点`url-test`(美|波特兰|达拉斯|俄勒冈|凤凰城|费利蒙|硅谷|拉斯维加斯|洛杉矶|圣何塞|圣克拉拉|西雅图|芝加哥|US|United States)`http://www.gstatic.com/generate_204`300,,150
custom_proxy_group=🇨🇳 台湾节点`url-test`(台|新北|彰化|TW|Taiwan)`http://www.gstatic.com/generate_204`300,,50
custom_proxy_group=🇸🇬 狮城节点`url-test`(新加坡|坡|狮城|SG|Singapore)`http://www.gstatic.com/generate_204`300,,50
custom_proxy_group=🇰🇷 韩国节点`url-test`(KR|Korea|KOR|首尔|韩|韓)`http://www.gstatic.com/generate_204`300,,50
;设置分组标志位


#custom_proxy_group=Group_Name`url-test|fallback|load-balance`Rule_1`Rule_2`...`test_url`interval[,timeout][,tolerance]
#custom_proxy_group=Group_Name`select`Rule_1`Rule_2`...
# 格式示例
#custom_proxy_group=🍎 苹果服务`url-test`(美国|US)`http://www.gstatic.com/generate_204`300,5,100
# 表示创建一个叫 🍎 苹果服务 的 url-test 策略组,并向其中添加名字含'美国','US'的节点，每隔300秒测试一次，测速超时为5s，切换节点的延迟容差为100ms
#custom_proxy_group=🇯🇵 日本延迟最低`url-test`(日|JP)`http://www.gstatic.com/generate_204`300,5
# 表示创建一个叫 🇯🇵 日本延迟最低 的 url-test 策略组,并向其中添加名字含'日','JP'的节点，每隔300秒测试一次，测速超时为5s
#custom_proxy_group=负载均衡`load-balance`.*`http://www.gstatic.com/generate_204`300,,100
# 表示创建一个叫 负载均衡 的 load-balance 策略组,并向其中添加所有的节点，每隔300秒测试一次，切换节点的延迟容差为100ms
#custom_proxy_group=🇯🇵 JP`select`沪日`日本`[]🇯🇵 日本延迟最低
# 表示创建一个叫 🇯🇵 JP 的 select 策略组,并向其中**依次**添加名字含'沪日','日本'的节点，以及引用上述所创建的 🇯🇵 日本延迟最低 策略组
#custom_proxy_group=节点选择`select`(^(?!.*(美国|日本)).*)
# 表示创建一个叫 节点选择 的 select 策略组,并向其中**依次**添加名字不包含'美国'或'日本'的节点
